<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: Dzemael Darkhold
  Authors: Zamphire
-->

<!DOCTYPE Profile [
<!-- Profile Settings -->
<!ENTITY openchest "0">
]>

<Profile>
  <Name>Dzemael Darkhold</Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
	<If Condition="not IsOnMap(171)">
		<RunCode Name="QueueDzemael"/>
	</If>
	<If Condition="IsOnMap(171)">
		<!-- Open the grand hall gate 0/1 -->
		<If Condition="GetInstanceTodo(0) == 0">
			<Log Message="Open the grand hall gate 0/1" />
			<If Condition="ClassName == ((ClassJobType.Bard))"> 
				<ChangeClass Job="Bard" />
			</If>
			<If Condition="ClassName == ((ClassJobType.BlackMage))"> 
				<ChangeClass Job="Black Mage" />
			</If>
			<If Condition="ClassName == ((ClassJobType.Dragoon))"> 
					<ChangeClass Job="Dragoon" />
			</If>	
			<If Condition="ClassName == ((ClassJobType.Monk))"> 
					<ChangeClass Job="Monk" />
			</If>
			<If Condition="ClassName == ((ClassJobType.Ninja))"> 
					<ChangeClass Job="Ninja" />
			</If>
			<If Condition="ClassName == ((ClassJobType.Paladin))"> 
				<ChangeClass Job="Paladin" />
			</If>		
			<If Condition="ClassName == ((ClassJobType.Scholar))"> 
					<ChangeClass Job="Scholar" />
			</If>
			<If Condition="ClassName == ((ClassJobType.Summoner))"> 
					<ChangeClass Job="Summoner" />
			</If>	
			<If Condition="ClassName == ((ClassJobType.Warrior))"> 
					<ChangeClass Job="Warrior" />
			</If>
			<If Condition="ClassName == ((ClassJobType.WhiteMage))"> 
					<ChangeClass Job="White Mage" />
			</If>
			<MoveTo XYZ="-46.80291, 14.47777, 204.0047" usemesh="false" />
			<MoveTo XYZ="-12.99286, 6.855292, 207.5447" usemesh="false" />
			<MoveTo XYZ="-11.70617, 3.330209, 242.58" usemesh="false" />
			<MoveTo XYZ="12.30812, 6.007485, 249.3662" usemesh="false" />
			<MoveTo XYZ="17.01524, 8.877165, 207.0296" usemesh="false" />
			<MoveTo XYZ="80.27469, 4.116292, 210.0562" usemesh="false" />			
			<MoveTo XYZ="80.89092, 1.310066, 174.33" usemesh="false" />
			<MoveTo XYZ="147.1888, -7.190695, 174.8598" usemesh="false" />
			<MoveTo XYZ="141.1405, -6.703758, 139.0793" usemesh="false" />
			<MoveTo XYZ="120.3149, -13.97904, 129.387"/>
			<MoveTo XYZ="115.9348, -11.96366, 143.4804"/>
			<MoveTo XYZ="112.6908, -10.72154, 117.8005"/>
			<MoveTo XYZ="141.2006, -11.86861, 115.3561"/>			
			<While condition="GameObjectManager.GetObjectByNPCId(2000479).IsVisible">
				<RunCode name="MagitekTerminal1"/>
			</While>
			<While condition="GameObjectManager.GetObjectByNPCId(2000478).IsVisible">
				<RunCode name="MagitekTerminal2"/>
			</While>
			<MoveTo XYZ="103.4893, -8.475436, 111.7622"/>
			<MoveTo XYZ="85.13301, -9.536562, 112.3407" usemesh="false"/>

			<MoveTo XYZ="69.61289, -13.69595, 100.2317"/>
			<NoCombatMoveTo XYZ="15.84783, -9.810274, 48.20736" usemesh="false"/>
			<Grind GrindRef="FirstBoss" While="Core.Me.HasAura(322)"/> <!-- Fight First Boss -->	
			<MoveTo XYZ="31.02124, -14.41603, 61.16034" usemesh="false"/>			
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>
			<MoveTo XYZ="23.35851,-12.30462,57.61283" usemesh="false" />
			<RunCode name="MagitekTransporter1"/>	
		</If>

		<!-- Open the grand hall gate 0/1 -->
		<If Condition="GetInstanceTodo(1) == 0">
			<Log Message="Clear the feasting hall 0/1" />
			<MoveTo XYZ="-110.8409, -23.67772, 5.566265"/>
			<MoveTo XYZ="-112.4736, -24.32887, -6.99648" usemesh="false" />
			<MoveTo XYZ="-103.2703, -27.96164, -21.93678"/>
			<WaitTimer WaitTime="5" />
			<Grind GrindRef="SecondBoss" While="not GameObjectManager.GetObjectByNPCId(1415).CurrentHealth == 0"/> <!-- Fight second Boss -->
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>
			<MoveTo XYZ="-96.80028,-30.00001,-41.82194" />
			<RunCode name="MagitekTransporter2"/>	
		</If>

		<!--Deactivate the level IV magitek field 0/1 -->
		<If Condition="GetInstanceTodo(2) == 0">
			<Log Message="Deactivate the level IV magitek field 0/1" />
			<MoveTo XYZ="-26.19443, -22.30001, -159.5977"/>
			<RunCode name="DisableSideStep"/>
			<While condition="GameObjectManager.GetObjectByNPCId(2000484).IsVisible">			
				<RunCode name="MagitekTerminal3"/>
			</While>
			<MoveTo XYZ="-8.081114, -18.17234, -175.0139"/>			
			<While condition="GameObjectManager.GetObjectByNPCId(2000483).IsVisible">			
				<RunCode name="MagitekTerminal4"/>
			</While>
			<RunCode name="EnableSideStep"/>
		</If>

		<!-- Defeat Batraal 0/1 -->
		<If Condition="GetInstanceTodo(3) == 0">
			<Log Message="Defeat Batraal 0/1" />
			<If Condition="ClassName == ((ClassJobType.Bard))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6261">
					<Log Message="Equipping Artemis Bow Atma" />
					<RunCode Name="ArtemisAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.BlackMage))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6263">
					<Log Message="Equipping Stardust Rod Atma" />
					<RunCode Name="StardustAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Dragoon))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6260">
					<Log Message="Equipping Gae Bolg Atma" />
					<RunCode Name="GaeBolgAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>	
			<If Condition="ClassName == ((ClassJobType.Monk))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6258">
					<Log Message="Equipping Sphairai Atma" />
					<RunCode Name="SphairaiAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Ninja))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 9250">
					<Log Message="Equipping Yoshimitsu Atma" />
					<RunCode Name="YoshimitsuAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Paladin))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6257">
					<Log Message="Equipping Curtana Atma" />
					<RunCode Name="CurtanaAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Paladin))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.OffHand].RawItemId != 7833">
					<Log Message="Equipping Holy Shield Atma" />
					<RunCode Name="HolyShieldAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>			
			<If Condition="ClassName == ((ClassJobType.Scholar))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6265">
					<Log Message="Equipping Omnilex Atma" />
					<RunCode Name="OmnilexAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Summoner))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6264">
					<Log Message="Equipping Viel of Wiyu Atma" />
					<RunCode Name="VeilAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>	
			<If Condition="ClassName == ((ClassJobType.Warrior))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6259">
					<Log Message="Equipping Bravura Atma" />
					<RunCode Name="BravuraAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.WhiteMage))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6262">
					<Log Message="Equipping Thyrus Atma" />
					<RunCode Name="ThyrusAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>			
			<MoveTo XYZ="66.4438, -38.24007, -157.4374" distance="2"/>
			<Grind GrindRef="FinalBoss" While="not GameObjectManager.GetObjectByNPCId(1396).CurrentHealth == 0"/> <!-- Fight final Boss -->
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>
			<MoveTo XYZ="79.24333,-38.93077,-182.4802" />
			<RunCode name="ExitDuty"/>
			<WaitTimer WaitTime="10"/>
			<LLoadProfile Path="../Start.xml"/>				
		</If>		
				
	</If>
  </Order>
  <GrindAreas>
    <GrindArea name="ClearRoom">
      <Hotspots>
        <Hotspot Radius="100" XYZ="127.2872, -14.5, 129.4491" name="Name"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="1656" Weight="1"/> <!-- Diamond-tooth Hedgemole -->
        <TargetMob Id="1657" Weight="1"/> <!-- Recluse Hippogryph -->
        <TargetMob Id="2152" Weight="1"/> <!-- Betrayed Soul -->
        <TargetMob Id="1655" Weight="1"/> <!-- Alpgrot Orobon -->
      </TargetMobs>
    </GrindArea>  
	<GrindArea name="FirstBoss">
        <Hotspots>
			<Hotspot Radius="200" XYZ="62.57715,-14.40824,84.36707" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Id="1397" Weight="1"/> <!-- All-seeing Eye -->
        </TargetMobs>
	</GrindArea>
	<GrindArea name="SecondBoss">
        <Hotspots>
			<Hotspot Radius="200" XYZ="-87.6936,-29.27332,-35.90454" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Id="1415" Weight="1" /> <!-- Taulurd    -->				
        </TargetMobs>
	</GrindArea>
	<GrindArea name="FinalBoss">
        <Hotspots>
			<Hotspot Radius="200" XYZ="70.72546,-37.83011,-162.2493" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Id="1396" Weight="1"/> <!-- Batraal  -->	
			<TargetMob Id="2154" Weight="20"/> <!-- Corrupted Crystal  -->			
        </TargetMobs>
	</GrindArea>	
  </GrindAreas>
  <CodeChunks>
	<CodeChunk Name="MagitekTerminal1">
      <![CDATA[
        var x = GameObjectManager.GetObjectByNPCId(2000479);
        var pos = new Vector3(x.Location.X, x.Location.Y, x.Location.Z);
        Navigator.PlayerMover.MoveTowards(pos);
        await Coroutine.Wait(-1, () => Core.Me.Distance(pos) < 1f);
        Navigator.PlayerMover.MoveStop();
		await Coroutine.Sleep(20000);
      ]]>
	</CodeChunk> 
	<CodeChunk Name="MagitekTerminal2">
      <![CDATA[
        var x = GameObjectManager.GetObjectByNPCId(2000478);
        var pos = new Vector3(x.Location.X, x.Location.Y, x.Location.Z);
        Navigator.PlayerMover.MoveTowards(pos);
        await Coroutine.Wait(-1, () => Core.Me.Distance(pos) < 1f);
        Navigator.PlayerMover.MoveStop();
		await Coroutine.Sleep(20000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="MagitekTerminal3">
      <![CDATA[
        var x = GameObjectManager.GetObjectByNPCId(2000484);
        var pos = new Vector3(x.Location.X, x.Location.Y, x.Location.Z);
        Navigator.PlayerMover.MoveTowards(pos);
        await Coroutine.Wait(-1, () => Core.Me.Distance(pos) < 1f);
        Navigator.PlayerMover.MoveStop();
		await Coroutine.Sleep(20000);
      ]]>
	</CodeChunk>	
	<CodeChunk Name="MagitekTerminal4">
      <![CDATA[
        var x = GameObjectManager.GetObjectByNPCId(2000483);
        var pos = new Vector3(x.Location.X, x.Location.Y, x.Location.Z);
        Navigator.PlayerMover.MoveTowards(pos);
        await Coroutine.Wait(-1, () => Core.Me.Distance(pos) < 1f);
        Navigator.PlayerMover.MoveStop();
		await Coroutine.Sleep(20000);
      ]]>
	</CodeChunk> 	
	<CodeChunk Name="MagitekTransporter1">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000458).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			while (!CommonBehaviors.IsLoading) { await Coroutine.Yield(); }
      ]]>
	</CodeChunk>
	<CodeChunk Name="MagitekTransporter2">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000474).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			while (!CommonBehaviors.IsLoading) { await Coroutine.Yield(); }
      ]]>
	</CodeChunk>	
	<CodeChunk Name="ExitDuty">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000139).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(3000);
      ]]>
	</CodeChunk>	
	<CodeChunk Name="ChangeZone">
		<![CDATA[
			MovementManager.SetFacing(3.190046f);
			MovementManager.MoveForwardStart();
			while (!CommonBehaviors.IsLoading) { await Coroutine.Yield(); }
			MovementManager.MoveStop();
		]]>
	</CodeChunk>	
	<CodeChunk name="OpenChest">
		<![CDATA[    
		if (GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).Any())
		{
			var _chest = GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "宝箱" || r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).FirstOrDefault();
			while (Core.Me.Distance(_chest.Location) > 1)
			{
			await CommonTasks.MoveTo(_chest.Location);
			await Coroutine.Yield();
			}
			
			Navigator.PlayerMover.MoveStop();
			await Coroutine.Sleep(1000);
			Poi.Current = new Poi(_chest, PoiType.Kill);
			Poi.Current.Unit.Interact();                    
			await Coroutine.Sleep(1000);        
		}
		]]>
	</CodeChunk>
	  <CodeChunk Name="EnableSideStep">
      <![CDATA[
        foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep"))
        {
          try
          {
            if (plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = true;  }
          }
          catch (Exception ex) {  }
        }
      ]]>
    </CodeChunk>
	<CodeChunk Name="DisableSideStep">
		<![CDATA[
			foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep"))
			{
			try
			{
				if (!plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = false;  }
			}
			catch (Exception ex) {  }
			}
		]]>
	</CodeChunk> 
	<CodeChunk Name="QueueDzemael">
		<![CDATA[ 
           Logging.WriteDiagnostic("Queuing for Dungeon");
		GameSettingsManager.JoinWithUndersizedParty = true;
           DutyManager.Queue(DataManager.InstanceContentResults[13]);
           await Coroutine.Wait(5000, () => (DutyManager.QueueState == QueueState.InQueue || DutyManager.QueueState == QueueState.JoiningInstance));

           Logging.WriteDiagnostic("Queued for Dungeon");

           await Coroutine.Wait(10000, () => (DutyManager.QueueState == QueueState.JoiningInstance));
			
           await Coroutine.Wait(10000, () => (RaptureAtkUnitManager.GetWindowByName("ContentsFinderConfirm") != null));

           Logging.WriteDiagnostic("Commencing");
           DutyManager.Commence();
           Logging.WriteDiagnostic("Waiting for Loading");
           await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading || QuestLogManager.InCutscene);
			
           if (CommonBehaviors.IsLoading)
           {
               await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
           }

           if (QuestLogManager.InCutscene)
           {
               TreeRoot.StatusText = "InCutscene";
               if (ff14bot.RemoteAgents.AgentCutScene.Instance != null)
               {
                   ff14bot.RemoteAgents.AgentCutScene.Instance.PromptSkip();
                   await Coroutine.Wait(250, () => SelectString.IsOpen);
                   if (SelectString.IsOpen)
                       SelectString.ClickSlot(0);
               }
           }

           Logging.WriteDiagnostic("Should be in duty");
		   
           var director = ((ff14bot.Directors.InstanceContentDirector) DirectorManager.ActiveDirector);
           if (director !=null)
		   {
               if (director.TimeLeftInDungeon >= new TimeSpan(1,30,0))
               {
				   Logging.WriteDiagnostic("Barrier up");
                   await Coroutine.Wait(30000, () => director.TimeLeftInDungeon < new TimeSpan(1,29,58));
               }
		   }
		   else
		   {
			Logging.WriteDiagnostic("Director is null");
		   }
			   
	      Logging.WriteDiagnostic("Should be ready");
		]]>
	</CodeChunk>
 		<CodeChunk Name="OmnilexAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7832)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>		
  		<CodeChunk Name="VeilAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7831)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="StardustAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7830)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="BravuraAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7826)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>
  		<CodeChunk Name="CurtanaAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7824)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>		
		</CodeChunk>
  		<CodeChunk Name="HolyShieldAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.OffHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7833)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>		
		</CodeChunk>	
  		<CodeChunk Name="ArtemisAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7828)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="GaeBolgAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7827)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="SphairaiAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7825)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>
  		<CodeChunk Name="YoshimitsuAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 9251)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>		
  		<CodeChunk Name="ThyrusAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7829)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  </CodeChunks>
</Profile>
