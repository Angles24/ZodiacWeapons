<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: The Navel (Hard)
  Authors: Zamphire
  Code Credit: TuckMeIntoBread, Kayla.
-->

<!DOCTYPE Profile [
<!-- Profile Settings -->
<!ENTITY openchest "0">
]>

<Profile>
  <Name>The Navel (Hard)</Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
 	<If condition="not DutyManager.InInstance">
		<LLJoinDuty DutyId="60" trial="true"/>
	</If>
	<If condition="DutyManager.InInstance">
		<MoveTo XYZ="-0.1087532, 2.384186E-07, 1.400909" usemesh="false"/> <!-- Move to center -->
		<Grind GrindRef="Titan" While="not GameObjectManager.GetObjectByNPCId(1801).CurrentHealth == 0"/> <!-- Kill Titan -->
		<If Condition="&openchest; == 1">
			<RunCode name="OpenChest" />
		</If>
		<While condition="DutyManager.InInstance">	
			<WaitTimer WaitTime="10" />
			<LLLeaveDuty/>
		</While>
	</If>

	<LLoadProfile Path="../Start.xml"/>
	
 </Order>
  <GrindAreas>
	<GrindArea name="Titan">
        <Hotspots>
			<Hotspot Radius="200" XYZ="-0.1087532, 2.384186E-07, 1.400909" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Name="Titan" Id="1801" Weight="1" />
			<TargetMob Name="Titan's Heart" Id="1802" Weight="2" />
        </TargetMobs>
	</GrindArea>
  </GrindAreas>		
  <CodeChunks>
	<CodeChunk Name="ExitDuty">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000139).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(3000);
      ]]>
	</CodeChunk>		
	<CodeChunk name="OpenChest">
		<![CDATA[    
		if (GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).Any())
		{
			var _chest = GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "宝箱" || r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).FirstOrDefault();
			while (Core.Me.Distance(_chest.Location) > 1)
			{
			await CommonTasks.MoveTo(_chest.Location);
			await Coroutine.Yield();
			}
			
			Navigator.PlayerMover.MoveStop();
			await Coroutine.Sleep(1000);
			Poi.Current = new Poi(_chest, PoiType.Kill);
			Poi.Current.Unit.Interact();                    
			await Coroutine.Sleep(1000);        
		}
		]]>
	</CodeChunk>	
  </CodeChunks>  
</Profile>    