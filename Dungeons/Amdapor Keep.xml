<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: Amdapor Keep
  Authors: Zamphire
  Code Credit: TuckMeIntoBread, Kayla.
-->

<!DOCTYPE Profile [
<!-- Profile Settings -->
<!ENTITY openchest "0">
]>

<Profile>
  <Name>Amdapor Keep</Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
 	<If condition="not DutyManager.InInstance">
		<LLJoinDuty DutyId="14"/>
	</If>
	<If condition="DutyManager.InInstance">
		<!-- Clear the Gier Hall 0/1 -->
		<If Condition="not GetInstanceTodo(0) == 1">
			<Log Message="Clear the Gier Hall 0/1" />
			<BotSettings AutoEquip="1" />	
			<MoveTo XYZ="-196.265, -4.200005, 13.03519"/> <!-- Move to bridge -->
			<MoveTo XYZ="-193.4538, -3.800007, 63.08482" usemesh="false"/> <!-- Move across bridge -->
			<MoveTo XYZ="-153.0291, -4, 87.56704" usemesh="false"/>
			<MoveTo XYZ="-49.44293, 0.1620599, 85.68034" usemesh="false"/>
			<MoveTo XYZ="-45.23792, 0, 68.82082" usemesh="false"/>
			<MoveTo XYZ="-70.51669, -2, 49.46097" usemesh="false"/>
			<MoveTo XYZ="-134.2573, -2.000006, 43.35908" usemesh="false"/>
			<MoveTo XYZ="-146.8705, -2, 29.05991" usemesh="false"/>
			<MoveTo XYZ="-134.8821, -2.4, 14.71817" usemesh="false"/>	
			<MoveTo XYZ="-83.99593, 3.099442E-06, -0.1227691" usemesh="false"/> <!-- Move to sealed gate -->
			<MoveTo XYZ="-73.51895, 0.1999929, 0.2118544" usemesh="false"/>
			<Grind GrindRef="LunaticPriest" While="not GameObjectManager.GetObjectByNPCId(1690).CurrentHealth == 0"/> <!-- Fight first boss -->
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>	
			<MoveTo XYZ="-10.23611,-1.192093E-07,-0.01531982" usemesh="false"/>
			<RunCode name="AstralFlow1"/>			
			<LogMessage Message="First boss dead"/>
		</If>
		<!-- Clear the Bloody Transept 0/1 -->
		<If Condition="not GetInstanceTodo(1) == 1">
			<MoveTo XYZ="115.199, 22.43723, -0.4705639"/> <!-- Move into first room -->		
			<MoveTo XYZ="199.4624, 22.4248, -70.63486"/> <!-- Move outside bosses room -->	
			<MoveTo XYZ="200.4684, 22, -112.2056" usemesh="false"/> <!-- Move into boss's room -->
			<MoveTo XYZ="199.5795, 22, -133.268" usemesh="false"/> <!-- Move into boss's room -->
			<Grind GrindRef="DemonWall" While="not GameObjectManager.GetObjectByNPCId(1694).CurrentHealth == 0"/> <!-- Fight second boss -->
			<LogMessage Message="Second boss dead"/>
		</If>
		<!-- Defeat Anantaboga 0/1-->
		<If Condition="not GetInstanceTodo(2) == 1">
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>
			<MoveTo XYZ="200.061,22,-165.266" usemesh="false"/> <!-- Move Astral Flow 2 -->
			<RunCode name="AstralFlow2"/>
			<MoveTo XYZ="136.8121, 44, -0.5193871"/> <!-- Move to first big door -->
			<MoveTo XYZ="25.36752, 48, 0.3284818" /> <!-- Move into bosses room -->
			<BotSettings AutoEquip="0" />	
			<If Condition="ClassName == ((ClassJobType.Bard))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6261">
					<Log Message="Equipping Artemis Bow Atma" />
					<RunCode Name="ArtemisAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.BlackMage))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6263">
					<Log Message="Equipping Stardust Rod Atma" />
					<RunCode Name="StardustAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Dragoon))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6260">
					<Log Message="Equipping Gae Bolg Atma" />
					<RunCode Name="GaeBolgAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>	
			<If Condition="ClassName == ((ClassJobType.Monk))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6258">
					<Log Message="Equipping Sphairai Atma" />
					<RunCode Name="SphairaiAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Ninja))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 9250">
					<Log Message="Equipping Yoshimitsu Atma" />
					<RunCode Name="YoshimitsuAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Paladin))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6257">
					<Log Message="Equipping Curtana Atma" />
					<RunCode Name="CurtanaAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Paladin))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.OffHand].RawItemId != 7833">
					<Log Message="Equipping Holy Shield Atma" />
					<RunCode Name="HolyShieldAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>			
			<If Condition="ClassName == ((ClassJobType.Scholar))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6265">
					<Log Message="Equipping Omnilex Atma" />
					<RunCode Name="OmnilexAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Summoner))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6264">
					<Log Message="Equipping Viel of Wiyu Atma" />
					<RunCode Name="VeilAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>	
			<If Condition="ClassName == ((ClassJobType.Warrior))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6259">
					<Log Message="Equipping Bravura Atma" />
					<RunCode Name="BravuraAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.WhiteMage))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6262">
					<Log Message="Equipping Thyrus Atma" />
					<RunCode Name="ThyrusAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>			
			<Grind GrindRef="Anantaboga" While="not GameObjectManager.GetObjectByNPCId(1696).CurrentHealth == 0"/> <!-- Fight final boss -->
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>
			<While condition="DutyManager.InInstance">	
				<WaitTimer WaitTime="10" />
				<LLLeaveDuty/>
			</While>
		</If>
	</If>

	<LLoadProfile Path="../Start.xml"/>
	
  </Order>
  <GrindAreas>
	<GrindArea name="LunaticPriest">
        <Hotspots>
			<Hotspot Radius="200" XYZ="-33.37984,0.0999999,0.07623291" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Name="Lunatic Priest" Id="1690" Weight="1" />
			<TargetMob Name="Psycheflayer " Id="1689" Weight="2" />			
        </TargetMobs>
	</GrindArea>
	<GrindArea name="DemonWall">
        <Hotspots>
			<Hotspot Radius="200" XYZ="200.0683,21.99992,-152" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Name="Demon Wall" Id="1694" Weight="1" />	
        </TargetMobs>
	</GrindArea>
	<GrindArea name="Anantaboga">
        <Hotspots>
			<Hotspot Radius="200" XYZ="-0.04577636,48.2028,0" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Name="Demon Wall" Id="1696" Weight="1" />	
        </TargetMobs>
	</GrindArea>	
  </GrindAreas>
  <CodeChunks>
  	<CodeChunk Name="AstralFlow1">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000500).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			while (!CommonBehaviors.IsLoading) { await Coroutine.Yield(); }
      ]]>
	</CodeChunk>  
  	<CodeChunk Name="AstralFlow2">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000501).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			while (!CommonBehaviors.IsLoading) { await Coroutine.Yield(); }
      ]]>
	</CodeChunk> 	
	<CodeChunk Name="ExitDuty">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000493).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(3000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="LeaveDuty">
		<![CDATA[
			ff14bot.Managers.DutyManager.LeaveActiveDuty();
			await Coroutine.Wait(20000, () => CommonBehaviors.IsLoading);
			if (CommonBehaviors.IsLoading)
			{
				await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
			}
		]]>
	</CodeChunk>	
	<CodeChunk Name="ChangeZone">
		<![CDATA[
			MovementManager.SetFacing(3.190046f);
			MovementManager.MoveForwardStart();
			while (!CommonBehaviors.IsLoading) { await Coroutine.Yield(); }
			MovementManager.MoveStop();
		]]>
	</CodeChunk>	
	<CodeChunk name="OpenChest">
		<![CDATA[    
		if (GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).Any())
		{
			var _chest = GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "宝箱" || r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).FirstOrDefault();
			while (Core.Me.Distance(_chest.Location) > 1)
			{
			await CommonTasks.MoveTo(_chest.Location);
			await Coroutine.Yield();
			}
			
			Navigator.PlayerMover.MoveStop();
			await Coroutine.Sleep(1000);
			Poi.Current = new Poi(_chest, PoiType.Kill);
			Poi.Current.Unit.Interact();                    
			await Coroutine.Sleep(1000);        
		}
		]]>
	</CodeChunk>
	  <CodeChunk Name="EnableSideStep">
      <![CDATA[
        foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep"))
        {
          try
          {
            if (plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = true;  }
          }
          catch (Exception ex) {  }
        }
      ]]>
    </CodeChunk>
	<CodeChunk Name="DisableSideStep">
		<![CDATA[
			foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep"))
			{
			try
			{
				if (!plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = false;  }
			}
			catch (Exception ex) {  }
			}
		]]>
	</CodeChunk> 
	<CodeChunk Name="QueueAmdapor"> 
		<![CDATA[ 
           Logging.WriteDiagnostic("Queuing for Dungeon");
		GameSettingsManager.JoinWithUndersizedParty = true;
           DutyManager.Queue(DataManager.InstanceContentResults[14]);
           await Coroutine.Wait(5000, () => (DutyManager.QueueState == QueueState.InQueue || DutyManager.QueueState == QueueState.JoiningInstance));

           Logging.WriteDiagnostic("Queued for Dungeon");

           await Coroutine.Wait(10000, () => (DutyManager.QueueState == QueueState.JoiningInstance));
			
           await Coroutine.Wait(10000, () => (RaptureAtkUnitManager.GetWindowByName("ContentsFinderConfirm") != null));

           Logging.WriteDiagnostic("Commencing");
           DutyManager.Commence();
           Logging.WriteDiagnostic("Waiting for Loading");
           await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading || QuestLogManager.InCutscene);
			
           if (CommonBehaviors.IsLoading)
           {
               await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
           }

           if (QuestLogManager.InCutscene)
           {
               TreeRoot.StatusText = "InCutscene";
               if (ff14bot.RemoteAgents.AgentCutScene.Instance != null)
               {
                   ff14bot.RemoteAgents.AgentCutScene.Instance.PromptSkip();
                   await Coroutine.Wait(250, () => SelectString.IsOpen);
                   if (SelectString.IsOpen)
                       SelectString.ClickSlot(0);
               }
           }

           Logging.WriteDiagnostic("Should be in duty");
		   
           var director = ((ff14bot.Directors.InstanceContentDirector) DirectorManager.ActiveDirector);
           if (director !=null)
		   {
               if (director.TimeLeftInDungeon >= new TimeSpan(1,30,0))
               {
				   Logging.WriteDiagnostic("Barrier up");
                   await Coroutine.Wait(30000, () => director.TimeLeftInDungeon < new TimeSpan(1,29,58));
               }
		   }
		   else
		   {
			Logging.WriteDiagnostic("Director is null");
		   }
			   
	      Logging.WriteDiagnostic("Should be ready");
		]]>
	</CodeChunk>
 		<CodeChunk Name="OmnilexAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7832)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>		
  		<CodeChunk Name="VeilAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7831)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="StardustAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7830)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="BravuraAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7826)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>
  		<CodeChunk Name="CurtanaAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7824)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>		
		</CodeChunk>
  		<CodeChunk Name="HolyShieldAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.OffHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7833)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>		
		</CodeChunk>	
  		<CodeChunk Name="ArtemisAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7828)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="GaeBolgAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7827)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="SphairaiAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7825)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>
  		<CodeChunk Name="YoshimitsuAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 9251)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>		
  		<CodeChunk Name="ThyrusAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7829)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  </CodeChunks>
</Profile>	