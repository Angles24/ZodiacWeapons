<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: Copperbell Mines
  Authors: Zamphire
-->

<!DOCTYPE Profile [
<!-- Profile Settings -->
<!ENTITY openchest "0">
]>

<Profile>
  <Name>Copperbell Mines</Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
	<If condition="not DutyManager.InInstance">
		<LLJoinDuty DutyId="3"/>
	</If>
	<If condition="DutyManager.InInstance">
		<!-- Clear shaft B4 of rubble 0/1 -->
		<If Condition="GetInstanceTodo(1) == 0">
			<Log Message="Clear shaft B4 of rubble 0/1" />
			<BotSettings AutoEquip="1" />	
			<MoveTo XYZ="-205.4989,23.81927,-208.5367"/>		
			<UseObject InCombat="True" NpcIds="2000159" XYZ="-220.1309, 23.80412, -208.2452" Radius="50" condition="not HasAtLeast(2000441,1)"/>
			<MoveTo XYZ="-205.4989,23.81927,-208.5367"/>
			<RunCode name="SealedBlastingDoor1"/>
			<MoveTo XYZ="-181.9118, 23.99999, -208.0539"/>
			<RunCode name="LifeLever1"/>
			<WaitTimer WaitTime="13" />
			<MoveTo XYZ="-145.0382, -9.442417, -208.1714" usemesh="false"/>
			<MoveTo XYZ="-20.34212, -8.936714, -158.5612"/>
			<UseObject NpcIds="2000169" XYZ="-20.82861,-8.071711,-161.6389" Radius="50" condition="GetInstanceTodo(0) == 0"/>
			<MoveTo XYZ="53.10145,-3.845266,-153.8264"/>
			<UseObject NpcIds="2000172" XYZ="53.10145,-3.845266,-153.8264" Radius="50" condition="GetInstanceTodo(0) == 1"/>
			<MoveTo XYZ="43.8211,-8.8478,-128.3291"/>
			<While condition="GetInstanceTodo(0) == 2">
				<RunCode name="PowderChamber1"/>
			</While>
			<MoveTo XYZ="41.37429,-9.249741,-135.2388"/>
			<While condition="GetInstanceTodo(1) == 0">
				<RunCode name="BlastingDevice1"/>
			</While>			
		</If>
		
		<!-- Clear shaft E1 of rubble 0/1 -->
		<If Condition="GetInstanceTodo(2) == 0">
			<Log Message="Clear shaft E1 of rubble 0/1" />
			<MoveTo XYZ="43.65644, -9.942099, -107.0623" usemesh="false"/>
			<MoveTo XYZ="51.90644, -9.245893, -87.23203"/>
			<Grind GrindRef="FirstBoss" While="not GameObjectManager.GetObjectByNPCId(2000178).IsVisible"/> <!-- Fight First Boss -->
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>
			<UseObject NpcIds="2000178" XYZ="42.90398,-9.979086,-69.08659" Radius="50" condition="not HasAtLeast(2000441,1)"/>
			<MoveTo XYZ="43.37675,-9.10968,-58.13428"/>	
			<RunCode name="SealedBlastingDoor2"/>
			<MoveTo XYZ="58.22326, -8.250008, 8.088243"/>
			<RunCode name="LifeLever2"/>
			<WaitTimer WaitTime="13" />
			<MoveTo XYZ="59.8905, -38.59576, 40.56261" usemesh="false"/>
			<Grind GrindRef="ClearShaftE1" While="NumAttackableEnemies(70, Array[int]([1342,984,1303])) &gt; 0"/> <!-- Get key to drop -->
			<UseObject NpcIds="2000179,2001531" XYZ="59.8905, -38.59576, 40.56261" Radius="100" condition="GetInstanceTodo(0) &lt; 2"/> <!-- Right side Firesand -->			
			<MoveTo XYZ="58.85282,-37.77425,55.07696" />
			<While condition="GetInstanceTodo(0) == 2">
				<RunCode name="PowderChamber2"/>
			</While>
			<MoveTo XYZ="56.72637,-37.99974,47.99045" />
			<While condition="GetInstanceTodo(2) == 0">
				<RunCode name="BlastingDevice2"/>
			</While>
		</If>

		<!-- Arrive in shaft E2 0/1 -->
		<If Condition="GetInstanceTodo(3) == 0">
			<MoveTo XYZ="57.51021, -38.87397, 66.95765" usemesh="false" />		
			<MoveTo XYZ="38.06453,-38.71266,60.51177" />
			<UseObject NpcIds="2001532" XYZ="38.06453,-38.71266,60.51177" Radius="20" condition="GetInstanceTodo(0) == 0"/>
			<MoveTo XYZ="35.85096, -37.8271, 90.57168"/>
			<Grind GrindRef="SecondBoss" While="not GameObjectManager.GetObjectByNPCId(2001533).IsVisible"/> <!-- Fight Second Boss -->
			<UseObject NpcIds="2001533" XYZ="31.75593,-37.93879,114.6466" Radius="100" condition="GetInstanceTodo(0) == 1"/>
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>			
			<MoveTo XYZ="6.485046,-37.17156,113.6339" />
			<While condition="GetInstanceTodo(0) == 2">
				<RunCode name="PowderChamber3"/>
			</While>
			<MoveTo XYZ="10.16271,-36.84641,106.697" />	
			<While condition="GameObjectManager.GetObjectByNPCId(2001534).IsVisible">
				<RunCode name="BlastingDevice3"/>
			</While>			
		</If>

		<!-- Defeat Gyges the Great 0/1 -->
		<If Condition="GetInstanceTodo(4) == 0">
			<MoveTo XYZ="-92.62537, -59.29224, 41.44617"/>
			<BotSettings AutoEquip="0" />	
			<If Condition="ClassName == ((ClassJobType.Bard))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6261">
					<Log Message="Equipping Artemis Bow Atma" />
					<RunCode Name="ArtemisAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.BlackMage))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6263">
					<Log Message="Equipping Stardust Rod Atma" />
					<RunCode Name="StardustAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Dragoon))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6260">
					<Log Message="Equipping Gae Bolg Atma" />
					<RunCode Name="GaeBolgAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>	
			<If Condition="ClassName == ((ClassJobType.Monk))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6258">
					<Log Message="Equipping Sphairai Atma" />
					<RunCode Name="SphairaiAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Ninja))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 9250">
					<Log Message="Equipping Yoshimitsu Atma" />
					<RunCode Name="YoshimitsuAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Paladin))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6257">
					<Log Message="Equipping Curtana Atma" />
					<RunCode Name="CurtanaAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Paladin))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.OffHand].RawItemId != 7833">
					<Log Message="Equipping Holy Shield Atma" />
					<RunCode Name="HolyShieldAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>			
			<If Condition="ClassName == ((ClassJobType.Scholar))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6265">
					<Log Message="Equipping Omnilex Atma" />
					<RunCode Name="OmnilexAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Summoner))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6264">
					<Log Message="Equipping Viel of Wiyu Atma" />
					<RunCode Name="VeilAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>	
			<If Condition="ClassName == ((ClassJobType.Warrior))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6259">
					<Log Message="Equipping Bravura Atma" />
					<RunCode Name="BravuraAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.WhiteMage))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6262">
					<Log Message="Equipping Thyrus Atma" />
					<RunCode Name="ThyrusAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>							
			<Grind GrindRef="FinalBoss" While="not GameObjectManager.GetObjectByNPCId(101).CurrentHealth == 0"/> <!-- Fight final Boss -->
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>
			<While condition="DutyManager.InInstance">	
				<WaitTimer WaitTime="10" />
				<LLLeaveDuty/>
			</While>				
		</If>				
	</If>
	
	<LLoadProfile Path="../Start.xml"/>		
	
  </Order>
  <GrindAreas>
     <GrindArea name="FirstKey">
      <Hotspots>
        <Hotspot Radius="20" XYZ="-222.6816, 23.82822, -206.699" name="Name"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="631" Weight="1"/> <!-- Spriggan Copper Copper -->
        <TargetMob Id="629" Weight="1"/> <!-- Copperbell Coblyn -->
      </TargetMobs>
    </GrindArea> 
	<GrindArea name="FirstBoss">
        <Hotspots>
			<Hotspot Radius="200" XYZ="51.90644, -9.245893, -87.23203" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Id="716" Weight="1"/> <!-- Spriggan Sifter -->
			<TargetMob Id="983" Weight="1"/> <!-- Flambeau  -->
			<TargetMob Id="548" Weight="2"/> <!-- Kottos -->
        </TargetMobs>
	</GrindArea>
    <GrindArea name="ClearShaftE1">
      <Hotspots>
        <Hotspot Radius="200" XYZ="59.8905, -38.59576, 40.56261"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="984" Weight="1"/> <!-- Errant Soul -->
        <TargetMob Id="1303" Weight="1"/> <!-- Blasting Cap -->
        <TargetMob Id="631" Weight="1"/> <!-- Spriggan Copper Copper -->
      </TargetMobs>
    </GrindArea>	
	<GrindArea name="SecondBoss">
        <Hotspots>
			<Hotspot Radius="200" XYZ="25.22314,-37.92662,112.1691" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Id="554" Weight="1" /> <!-- Ichorous Ire   -->				
        </TargetMobs>
	</GrindArea>
	<GrindArea name="FinalBoss">
        <Hotspots>
			<Hotspot Radius="200" XYZ="-102.4949,-58.50376,15.31488" />
        </Hotspots>
        <TargetMobs>
        <TargetMob Id="101" Weight="1"/> <!-- Gyges the Great -->		
        </TargetMobs>
	</GrindArea>	
  </GrindAreas>
  <CodeChunks>		
	<CodeChunk Name="SealedBlastingDoor1">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000160).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="SealedBlastingDoor2">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000173).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>	
	<CodeChunk Name="LifeLever1">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000163).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="LifeLever2">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000175).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>	
	<CodeChunk Name="PowderChamber1">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2001536).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="PowderChamber2">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2001537).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>
		<CodeChunk Name="PowderChamber3">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2001538).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>	
	<CodeChunk Name="BlastingDevice1">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000170).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="BlastingDevice2">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000180).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="BlastingDevice3">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2001534).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(5000);
      ]]>
	</CodeChunk>	
	<CodeChunk Name="ExitDuty">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000139).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(3000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="LeaveDuty">
		<![CDATA[
			ff14bot.Managers.DutyManager.LeaveActiveDuty();
			await Coroutine.Wait(20000, () => CommonBehaviors.IsLoading);
			if (CommonBehaviors.IsLoading)
			{
				await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
			}
		]]>
	</CodeChunk>	
	<CodeChunk Name="ChangeZone">
		<![CDATA[
			MovementManager.SetFacing(3.190046f);
			MovementManager.MoveForwardStart();
			while (!CommonBehaviors.IsLoading) { await Coroutine.Yield(); }
			MovementManager.MoveStop();
		]]>
	</CodeChunk>	
	<CodeChunk name="OpenChest">
		<![CDATA[    
		if (GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).Any())
		{
			var _chest = GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "宝箱" || r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).FirstOrDefault();
			while (Core.Me.Distance(_chest.Location) > 1)
			{
			await CommonTasks.MoveTo(_chest.Location);
			await Coroutine.Yield();
			}
			
			Navigator.PlayerMover.MoveStop();
			await Coroutine.Sleep(1000);
			Poi.Current = new Poi(_chest, PoiType.Kill);
			Poi.Current.Unit.Interact();                    
			await Coroutine.Sleep(1000);        
		}
		]]>
	</CodeChunk>
	  <CodeChunk Name="EnableSideStep">
      <![CDATA[
        foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep"))
        {
          try
          {
            if (plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = true;  }
          }
          catch (Exception ex) {  }
        }
      ]]>
    </CodeChunk>
	<CodeChunk Name="DisableSideStep">
		<![CDATA[
			foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep"))
			{
			try
			{
				if (!plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = false;  }
			}
			catch (Exception ex) {  }
			}
		]]>
	</CodeChunk> 
	<CodeChunk Name="QueueCopperbell">
		<![CDATA[ 
           Logging.WriteDiagnostic("Queuing for Dungeon");
		GameSettingsManager.JoinWithUndersizedParty = true;
           DutyManager.Queue(DataManager.InstanceContentResults[3]);
           await Coroutine.Wait(5000, () => (DutyManager.QueueState == QueueState.InQueue || DutyManager.QueueState == QueueState.JoiningInstance));

           Logging.WriteDiagnostic("Queued for Dungeon");

           await Coroutine.Wait(10000, () => (DutyManager.QueueState == QueueState.JoiningInstance));
			
           await Coroutine.Wait(10000, () => (RaptureAtkUnitManager.GetWindowByName("ContentsFinderConfirm") != null));

           Logging.WriteDiagnostic("Commencing");
           DutyManager.Commence();
           Logging.WriteDiagnostic("Waiting for Loading");
           await Coroutine.Wait(10000, () => CommonBehaviors.IsLoading || QuestLogManager.InCutscene);
			
           if (CommonBehaviors.IsLoading)
           {
               await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
           }

           if (QuestLogManager.InCutscene)
           {
               TreeRoot.StatusText = "InCutscene";
               if (ff14bot.RemoteAgents.AgentCutScene.Instance != null)
               {
                   ff14bot.RemoteAgents.AgentCutScene.Instance.PromptSkip();
                   await Coroutine.Wait(250, () => SelectString.IsOpen);
                   if (SelectString.IsOpen)
                       SelectString.ClickSlot(0);
               }
           }

           Logging.WriteDiagnostic("Should be in duty");
		   
           var director = ((ff14bot.Directors.InstanceContentDirector) DirectorManager.ActiveDirector);
           if (director !=null)
		   {
               if (director.TimeLeftInDungeon >= new TimeSpan(1,30,0))
               {
				   Logging.WriteDiagnostic("Barrier up");
                   await Coroutine.Wait(30000, () => director.TimeLeftInDungeon < new TimeSpan(1,29,58));
               }
		   }
		   else
		   {
			Logging.WriteDiagnostic("Director is null");
		   }
			   
	      Logging.WriteDiagnostic("Should be ready");
		]]>
	</CodeChunk>
 		<CodeChunk Name="OmnilexAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7832)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>		
  		<CodeChunk Name="VeilAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7831)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="StardustAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7830)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="BravuraAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7826)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>
  		<CodeChunk Name="CurtanaAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7824)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>		
		</CodeChunk>
  		<CodeChunk Name="HolyShieldAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.OffHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7833)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>		
		</CodeChunk>	
  		<CodeChunk Name="ArtemisAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7828)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="GaeBolgAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7827)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="SphairaiAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7825)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>
  		<CodeChunk Name="YoshimitsuAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 9251)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>		
  		<CodeChunk Name="ThyrusAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7829)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  </CodeChunks>
</Profile>
