<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: Brayflox's Longstop (Hard)
  Authors: Zamphire
-->

<!DOCTYPE Profile [
<!-- Profile Settings -->
<!ENTITY openchest "0">
]>

<Profile>
  <Name>Brayflox's Longstop (Hard)</Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
     <!-- [Brayflox's Longstop (Hard)] Curds and Slay -->
    <If Condition="not HasQuest(66947) and not IsQuestCompleted(66947)">
      <GetTo ZoneId="156" XYZ="32.51, 21.27503, -636.2501"/>
      <If Condition="IsQuestAcceptQualified(66947)">
        <PickupQuest QuestId="66947" NpcId="1006975" XYZ="32.82214, 21.25273, -635.462"/>
      </If>
    </If>
    <If Condition="HasQuest(66947) and not IsQuestCompleted(66947) and GetQuestStep(66947) == 1">
      <GetTo ZoneId="137" XYZ="559.1483, 20.75329, 455.952"/>
      <TalkTo NpcId="1006266" XYZ="560.3571, 20.75329, 455.8937" QuestId="66947" StepId="1"/>
    </If>
    <If Condition="HasQuest(66947) and not IsQuestCompleted(66947) and GetQuestStep(66947) == 255">
      <LisbethTravel Area="Eastern La Noscea (Raincatcher Gully)" Position="-331.2567, 69.03585, 155.8954"/>
      <TurnIn QuestId="66947" NpcId="1006268" XYZ="-334.6151, 69.69995, 153.7957"/>
    </If>

		
	<If condition="not DutyManager.InInstance">
		<LLJoinDuty DutyId="20" />
	</If>
	<If condition="DutyManager.InInstance">

		<!-- Farm first Tiny Key -->
		<If Condition="GetInstanceTodo(0) == 0 and GetInstanceTodo(1) == 0">
			<Log Message="Farming first Tiny Key" />
			<BotSettings AutoEquip="1" />	
			<RunCode name="DisableSideStep"/>
			<MoveTo XYZ="-81.80727, -2.381622, 0.4254619" />
			<MoveTo XYZ="-43.06401, -2.381622, 54.97089" />
			<MoveTo XYZ="-8.675864, -0.7706152, 0.8579024" />
			<Grind GrindRef="FarmTinyKey" While="not GameObjectManager.GetObjectByNPCId(2660).CurrentHealth == 0"/>
			<UseObject NpcIds="2002325" radius="200" XYZ="-7.703425,-1.383872,-2.724141" condition="GetInstanceTodo(0) == 0"/>
			<RunCode name="EnableSideStep"/>
		</If>	

		<!-- Clear Runstop Frontblock 0/1 -->
		<If Condition="GetInstanceTodo(1) == 0">
			<Log Message="Clear Runstop Frontblock 0/1" />
			<RunCode Name="EnableSideStep"/>
			<MoveTo XYZ="105.253, -0.1222783, 12.77754" distance="2"/> <!-- Move to Headgate -->		
			<While condition="GameObjectManager.GetObjectByNPCId(2002182).IsTargetable">
				<MoveTo XYZ="105.253, -0.1222783, 12.77754" distance="2"/>
				<RunCode Name="RunstopHeadgate"/> <!-- Open Runstop Headgate -->
			</While>	
			<MoveTo XYZ="113.9325, -2.48531, -17.92782"/> <!-- Move to first boss -->
			<Grind GrindRef="FirstBoss" While="not GameObjectManager.GetObjectByNPCId(2548).CurrentHealth == 0"/> <!-- Fight First Boss -->	
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>
		</If>		
			
		<!-- Liberate captured goblins 0/3 -->
		<If Condition="GetInstanceTodo(2) == 0">			
			<Log Message="Liberate captured goblins 0/3" />
			<MoveTo XYZ="91.8576, 4.53233, -104.8914"/> <!-- Move to First cage --> 			
			<Log Message="Liberate captured goblins 1/3" />
			<MoveTo XYZ="34.06355, 7.038593, -85.85194"/> <!-- Move to Second cage -->			
			<Log Message="Liberate captured goblins 2/3" />
			<MoveTo XYZ="28.31378, 6.905986, -118.8425"/> <!-- Move to Third cage -->
		</If>
		
		<!-- Clear Brayflox's Drossdump 0/1 -->
		<If Condition="GetInstanceTodo(3) == 0">			
			<Log Message="Clear Brayflox's Drossdump 0/1" />
			<MoveTo XYZ="44.75682, 7.015042, -128.6179"/> <!-- Move to cave entrance -->
			<WaitTimer WaitTime="13"/>
			<RunCode Name="ChangeZone"/> <!-- Subzone ID: 1341 -->
			<Grind GrindRef="SecondBoss" While="GetInstanceTodo(3) == 0" /> --> <!-- Kill second boss -->
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>			
		</If>
		
		<!-- Open Swiftmake Checkgates 0/2 -->
		<If Condition="GetInstanceTodo(4) == 0">			
			<Log Message="Open Swiftmake Checkgates 0/2" />
			<MoveTo XYZ="-82.54991, 14.92233, -129.3664"/> <!-- Move to Tiny Key 2 -->
			<UseObject NpcIds="2002642" radius="200" XYZ="-88.23793,13.14307,-122.5465" condition="GetInstanceTodo(0) == 0"/>
			<MoveTo XYZ="-95.26472,12.88843,-122.5933"/> <!-- Move to Swiftmake Checkgate 1 -->			
			<While condition="GameObjectManager.GetObjectByNPCId(2002184).IsTargetable">
				<MoveTo XYZ="-95.26472,12.88843,-122.5933" distance="2"/> <!-- Move to Swiftmake Checkgate 1 -->	
				<RunCode Name="SwiftmakeCheckgate1"/> <!-- Open First Swiftmake Gate -->
			</While>	
		</If>	
			
		<!-- Open Swiftmake Checkgates 1/2 -->
		<If Condition="GetInstanceTodo(4) == 1">			
			<Log Message="Open Swiftmake Checkgates 1/2" />
			<MoveTo XYZ="-106.2929, 13.08915, -127.7986" offmesh="false"/> <!-- Move to other side of gate -->
			<MoveTo XYZ="-111.197, 14.417, -138.6074"/>
			<MoveTo XYZ="-97.07648, 20.52424, -170.3631"/>
			<MoveTo XYZ="-101.2143, 20.73654, -179.9232"/> <!-- Move to Tiny Key 3 -->
			<UseObject InCombat="true" NpcIds="2002644" radius="200" XYZ="-93.87576,20.48067,-173.7249" condition="GetInstanceTodo(0) == 0"/>
			<MoveTo XYZ="-101.1448, 21.29802, -189.0635" /> <!-- Move to Swiftmake Checkgate 2 -->
			<While condition="GameObjectManager.GetObjectByNPCId(2002884).IsTargetable">
				<MoveTo XYZ="-101.1448, 21.29802, -189.0635" distance="2"/> <!-- Move to Swiftmake Checkgate 2 -->
				<RunCode Name="SwiftmakeCheckgate2"/> <!-- Open second Swiftmake Gate -->
			</While>		
		</If>			

		<!-- Defeat the gobmachine G-VI 0/1 -->
		<If Condition="GetInstanceTodo(5) == 0">			
			<Log Message="Defeat the gobmachine G-VI 0/1" />
			<BotSettings AutoEquip="0" />	
			<If Condition="ClassName == ((ClassJobType.Bard))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6261">
					<Log Message="Equipping Artemis Bow Atma" />
					<RunCode Name="ArtemisAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.BlackMage))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6263">
					<Log Message="Equipping Stardust Rod Atma" />
					<RunCode Name="StardustAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Dragoon))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6260">
					<Log Message="Equipping Gae Bolg Atma" />
					<RunCode Name="GaeBolgAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>	
			<If Condition="ClassName == ((ClassJobType.Monk))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6258">
					<Log Message="Equipping Sphairai Atma" />
					<RunCode Name="SphairaiAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Ninja))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 9250">
					<Log Message="Equipping Yoshimitsu Atma" />
					<RunCode Name="YoshimitsuAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Paladin))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6257">
					<Log Message="Equipping Curtana Atma" />
					<RunCode Name="CurtanaAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Paladin))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.OffHand].RawItemId != 7833">
					<Log Message="Equipping Holy Shield Atma" />
					<RunCode Name="HolyShieldAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>			
			<If Condition="ClassName == ((ClassJobType.Scholar))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6265">
					<Log Message="Equipping Omnilex Atma" />
					<RunCode Name="OmnilexAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.Summoner))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6264">
					<Log Message="Equipping Viel of Wiyu Atma" />
					<RunCode Name="VeilAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>	
			<If Condition="ClassName == ((ClassJobType.Warrior))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6259">
					<Log Message="Equipping Bravura Atma" />
					<RunCode Name="BravuraAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>
			<If Condition="ClassName == ((ClassJobType.WhiteMage))"> 
				<If Condition="ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand].RawItemId != 6262">
					<Log Message="Equipping Thyrus Atma" />
					<RunCode Name="ThyrusAtma" />
					<WaitTimer WaitTime="3" />
				</If>
			</If>				
			<MoveTo XYZ="-44.58178, 34.72327, -235.4707"/> <!-- Move to final boss -->
			<Grind GrindRef="FinalBoss" While="GetInstanceTodo(5) == 0" /> <!-- Kill second boss -->			
			<If Condition="&openchest; == 1">
				<RunCode name="OpenChest" />
			</If>
			<While condition="DutyManager.InInstance">	
				<WaitTimer WaitTime="10" />
				<LLLeaveDuty/>
			</While>			
		</If>		
	</If>

	<LLoadProfile Path="../Start.xml"/>
	
  </Order>
  <GrindAreas>
	<GrindArea name="FarmTinyKey">
        <Hotspots>
			<Hotspot Radius="20" XYZ="-8.675864, -0.7706152, 0.8579024" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Id="2660" Weight="1" /> <!-- Illuminati Soldier -->			
        </TargetMobs>
	</GrindArea>  
	<GrindArea name="SecondBoss">
        <Hotspots>
			<Hotspot Radius="200" XYZ="-22.56818,25.52351,-174.3038" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Id="2549" Weight="1" />			
        </TargetMobs>
	</GrindArea>
	<GrindArea name="FirstBoss">
        <Hotspots>
			<Hotspot Radius="200" XYZ="111.4667,-2.443486,-40.1763" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Name="Illuminati Commander" Id="2548" Weight="1" />			
        </TargetMobs>
	</GrindArea>
	<GrindArea name="FinalBoss">
        <Hotspots>
			<Hotspot Radius="200" XYZ="-26.09322,35.28735,-228.3997" />
        </Hotspots>
        <TargetMobs>
			<TargetMob Id="2547" Weight="1" />			
        </TargetMobs>
	</GrindArea>	
  </GrindAreas>
  <CodeChunks>  
	<CodeChunk Name="TinyKey1">
      <![CDATA[
        var x = GameObjectManager.GetObjectByNPCId(2002325);
        var pos = new Vector3(x.Location.X, x.Location.Y, x.Location.Z);
        Navigator.PlayerMover.MoveTowards(pos);
        await Coroutine.Wait(-1, () => Core.Me.Distance(pos) < 3f);
        Navigator.PlayerMover.MoveStop();
		await Coroutine.Sleep(1000);
        ff14bot.Managers.GameObjectManager.GetObjectByNPCId(x.NpcId).Interact();
      ]]>
	</CodeChunk>
	<CodeChunk Name="TinyKey2">
      <![CDATA[
        var x = GameObjectManager.GetObjectByNPCId(2002642);
        var pos = new Vector3(x.Location.X, x.Location.Y, x.Location.Z);
        Navigator.PlayerMover.MoveTowards(pos);
        await Coroutine.Wait(-1, () => Core.Me.Distance(pos) < 3f);
        Navigator.PlayerMover.MoveStop();
		await Coroutine.Sleep(1000);
        ff14bot.Managers.GameObjectManager.GetObjectByNPCId(x.NpcId).Interact();
      ]]>
	</CodeChunk>
	<CodeChunk Name="TinyKey3">
      <![CDATA[
        var x = GameObjectManager.GetObjectByNPCId(2002644);
        var pos = new Vector3(x.Location.X, x.Location.Y, x.Location.Z);
        Navigator.PlayerMover.MoveTowards(pos);
        await Coroutine.Wait(-1, () => Core.Me.Distance(pos) < 3f);
        Navigator.PlayerMover.MoveStop();
		await Coroutine.Sleep(1000);
        ff14bot.Managers.GameObjectManager.GetObjectByNPCId(x.NpcId).Interact();
      ]]>
	</CodeChunk>	
	<CodeChunk Name="RunstopHeadgate">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2002182).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(3000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="SwiftmakeCheckgate1">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2002184).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(3000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="SwiftmakeCheckgate2">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2002884).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(3000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="ExitDuty">
		<![CDATA[
			ff14bot.Managers.GameObjectManager.GetObjectByNPCId(2000139).Interact();
			await Coroutine.Sleep(1000);
			ff14bot.RemoteWindows.SelectYesno.ClickYes();
			await Coroutine.Sleep(3000);
      ]]>
	</CodeChunk>
	<CodeChunk Name="LeaveDuty">
		<![CDATA[
			ff14bot.Managers.DutyManager.LeaveActiveDuty();
			await Coroutine.Wait(20000, () => CommonBehaviors.IsLoading);
			if (CommonBehaviors.IsLoading)
			{
				await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
			}
		]]>
	</CodeChunk>	
	<CodeChunk Name="ChangeZone">
		<![CDATA[
			MovementManager.SetFacing(3.190046f);
			MovementManager.MoveForwardStart();
			while (!CommonBehaviors.IsLoading) { await Coroutine.Yield(); }
			MovementManager.MoveStop();
		]]>
	</CodeChunk>	
	<CodeChunk name="OpenChest">
		<![CDATA[    
		if (GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).Any())
		{
			var _chest = GameObjectManager.GetObjectsOfType<Treasure>().Where(r => r.Distance() < 50 && (r.Name == "宝箱" || r.Name == "Treasure Coffer" || r.Name == "treasure coffer")).FirstOrDefault();
			while (Core.Me.Distance(_chest.Location) > 1)
			{
			await CommonTasks.MoveTo(_chest.Location);
			await Coroutine.Yield();
			}
			
			Navigator.PlayerMover.MoveStop();
			await Coroutine.Sleep(1000);
			Poi.Current = new Poi(_chest, PoiType.Kill);
			Poi.Current.Unit.Interact();                    
			await Coroutine.Sleep(1000);        
		}
		]]>
	</CodeChunk>
	  <CodeChunk Name="EnableSideStep">
      <![CDATA[
        foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep"))
        {
          try
          {
            if (plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = true;  }
          }
          catch (Exception ex) {  }
        }
      ]]>
    </CodeChunk>
	<CodeChunk Name="DisableSideStep">
		<![CDATA[
			foreach (var plugin in PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep"))
			{
			try
			{
				if (!plugin.Enabled)  {  break;  }  else  {  plugin.Enabled = false;  }
			}
			catch (Exception ex) {  }
			}
		]]>
	</CodeChunk> 
 		<CodeChunk Name="OmnilexAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7832)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>		
  		<CodeChunk Name="VeilAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7831)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="StardustAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7830)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="BravuraAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7826)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>
  		<CodeChunk Name="CurtanaAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7824)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>		
		</CodeChunk>
  		<CodeChunk Name="HolyShieldAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.OffHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7833)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>		
		</CodeChunk>	
  		<CodeChunk Name="ArtemisAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7828)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="GaeBolgAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7827)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  		<CodeChunk Name="SphairaiAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7825)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>
  		<CodeChunk Name="YoshimitsuAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 9251)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>		
  		<CodeChunk Name="ThyrusAtma">
		<![CDATA[ 
			BagSlot EquipSlot = ff14bot.Managers.InventoryManager.GetBagByInventoryBagId(ff14bot.Enums.InventoryBagId.EquippedItems)[ff14bot.Enums.EquipmentSlot.MainHand];
			
			foreach(ff14bot.Managers.BagSlot slot in ff14bot.Managers.InventoryManager.FilledInventoryAndArmory)
			{
				if(slot.RawItemId == 7829)
				{
					slot.Move(EquipSlot);
				}
			}
		]]>
		</CodeChunk>	
  </CodeChunks>
</Profile>
